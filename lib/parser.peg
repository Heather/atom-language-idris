/*
 * PEG.js grammar for parsing the Idris IDESlave commands.
 * It is a slightly opinionated parser, in that it expects the SExp to be a
 * SexpList that starts with a SymbolAtom such that a nice JSON can be built
 * to represent it in the form `{op: [symbol], params: [rest-of-list]}`
 * But it will also understand SexpList that does not start with a SymbolAtom
 * which will then be represented as a normal array.
 */
start
  = cmd

cmd
  = "(:" a:atomC " " l:args ")" { return {op: a, params:l} }
  / "(" a:args ")" {return a}

args
  = a:atom " " l:args { l.unshift(a); return l }
  / a:atom { return [a] }

atom
  = integer
  / ":" id:atomC { return {id: id} }
  / str
  / cmd

atomC
  = "True" {return true}
  / "False" {return false}
  / str:[^  \n\t\r\"\(\)]+ { return str.join("") }

integer
  = digits:[0-9]+ { return parseInt(digits.join(""), 10); }

str
    = "\"" str:(!unscapedquote .)* last:unscapedquote {
	return str.reduce(function(r,s) { return r + s[1]},"").replace(/\\\"/g, '"') + last; 
    }

unscapedquote
    = last:[^\\] "\"" {return last;}
